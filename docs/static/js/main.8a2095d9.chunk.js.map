{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmBhD,OACI,sBAAMC,SAZe,SAAEC,GAEnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACzCN,EAAc,MAOtB,SAGI,uBACIO,KAAM,OACNC,MAAQT,EACRU,SAtBkB,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCJvBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAIFC,EAAOD,EAAKE,KACd,SAAAC,GAAQ,IAAD,EACH,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAb1B,kBAgBVM,GAhBU,4CAAH,sDCDPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OAFIc,QAAQC,IAAKN,EAAIC,EAAOV,GAGxB,sBAAKgB,UAAU,0CAAf,UACE,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCFGS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBACtB,CACAqB,KAAM,GACNe,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA+BxC,OAtBCC,qBAAW,WAER1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAKoB,EACLL,SAAS,SAUtB,CAACtB,IAIGuB,EDzB0BK,CAAc5B,GAAlCa,EAJwB,EAI7BN,KAAae,EAJgB,EAIhBA,QAGrB,OACI,qCACC,6BAAMtB,IACLsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAKYL,EAAOJ,KAAK,SAAAC,GAAG,OAEZ,cAAC,EAAD,eAGKA,GADCA,EAAIC,aEvBpBkB,EAAe,WAAM,MAIM3C,mBAAS,CAAC,gBAJhB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAU9B,OACI,qCACK,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAID,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAGCA,SAAWA,GADNA,Y,MCrB9B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.8a2095d9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport ProTypes from 'prop-types';\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n        const [inputValue, setInputValue] = useState('');\r\n\r\n        const handleInputChange = ( e ) => { \r\n            setInputValue( e.target.value );\r\n        }\r\n\r\n        const handleSubmit = ( e ) => {\r\n\r\n            e.preventDefault();\r\n            if(inputValue.trim().length > 2 ){\r\n                setCategories( cats => [  inputValue, ...cats, ]);\r\n                setInputValue('');\r\n            }\r\n            \r\n\r\n        }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n          \r\n\r\n            <input \r\n                type =\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: ProTypes.func.isRequired,\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async( category ) =>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=zAFs6uNY5CIeTtaFRKHvJoAmaYEP1PSL`;\r\n   const resp = await fetch( url );\r\n   const { data } = await resp.json();\r\n\r\n   //console.log( data );\r\n\r\n   const gifs = data.map(\r\n       img => {\r\n           return{\r\n               id: img.id,\r\n               title: img.title,\r\n               url: img.images?.downsized_medium.url\r\n           }\r\n       })\r\n      return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n        console.log( id, title, url );\r\n\r\n    return (\r\n        <div className=\"card  animate__animated animate__bounce\">\r\n          <img src={ url } alt={ title }/>\r\n          <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","// Componente para la grilla de imagenes\r\n\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  \r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n         <h3>{ category }</h3>\r\n        { loading && <p>Loading</p> }\r\n        <div className=\"card-grid\">\r\n           \r\n            \r\n                {\r\n\r\n                    images.map( img =>(\r\n\r\n                       <GifGridItem \r\n                       \r\n                       key={ img.id }\r\n                       { ...img }\r\n                       \r\n                       />\r\n\r\n                    ))\r\n\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n       \r\n    )\r\n}\r\n","\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setstate] = useState(\r\n        {\r\n        data: [],\r\n        loading: true\r\n    }\r\n    );\r\n\r\n     useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n               \r\n                console.log(imgs)\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n\r\n               \r\n\r\n               \r\n\r\n               \r\n            })\r\n       \r\n    }, [category] )\r\n\r\n   \r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () =>{\r\n    //    setCategories( ['Pok√©mon', ...categories] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n             <h2>GifExpertApp</h2>\r\n             <AddCategory setCategories={ setCategories }/>\r\n\r\n             <hr />\r\n\r\n             \r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n\r\n                        <GifGrid \r\n\r\n                        key={ category }\r\n                         category={ category } \r\n                         \r\n                         />\r\n\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n// Tarea \n// 1. crear componente GifExpertApp\n// 2. <h2>GifExpertApp</h2>\n// 3. <hr />\n//zAFs6uNY5CIeTtaFRKHvJoAmaYEP1PSL\n"],"sourceRoot":""}